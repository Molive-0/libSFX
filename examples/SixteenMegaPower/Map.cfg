# Custom Memory Map (Mode 20 "LoROM" mapping with 64*32kB banks)
# David Lindecrantz <optiroc@gmail.com>

SYMBOLS {
    __STACKSIZE__: type = weak, value = $100;
    __ZPADSIZE__:  type = weak, value = $20;
}

MEMORY {
    ZPAD:       start = $000000, size = __ZPADSIZE__, define = yes;
    ZPAGE:      start = __ZPADSIZE__, size = $100 - __ZPADSIZE__, define = yes;
    LORAM:      start = $000100, size = $1f00 - __STACKSIZE__, define = yes;
    STACK:      start = $002000 - __STACKSIZE__, size = __STACKSIZE__, define = yes;

    HIRAM:      start = $7e2000, size = $e000, define = yes;
    EXRAM:      start = $7f0000, size = $10000, define = yes;
    SRAM:       start = $fd0000, size = $8000, define = yes;

    ROM0:       start = $808000, size = $8000, fill = yes, fillval = $ff;
    ROM1:       start = $818000, size = $8000, fill = yes, fillval = $ff;
    ROM2:       start = $828000, size = $8000, fill = yes, fillval = $ff;
    ROM3:       start = $838000, size = $8000, fill = yes, fillval = $ff;
    ROM4:       start = $848000, size = $8000, fill = yes, fillval = $ff;
    ROM5:       start = $858000, size = $8000, fill = yes, fillval = $ff;
    ROM6:       start = $868000, size = $8000, fill = yes, fillval = $ff;
    ROM7:       start = $878000, size = $8000, fill = yes, fillval = $ff;
    ROM8:       start = $888000, size = $8000, fill = yes, fillval = $ff;
    ROM9:       start = $898000, size = $8000, fill = yes, fillval = $ff;
    ROM10:      start = $8a8000, size = $8000, fill = yes, fillval = $ff;
    ROM11:      start = $8b8000, size = $8000, fill = yes, fillval = $ff;
    ROM12:      start = $8c8000, size = $8000, fill = yes, fillval = $ff;
    ROM13:      start = $8d8000, size = $8000, fill = yes, fillval = $ff;
    ROM14:      start = $8e8000, size = $8000, fill = yes, fillval = $ff;
    ROM15:      start = $8f8000, size = $8000, fill = yes, fillval = $ff;
    ROM16:      start = $908000, size = $8000, fill = yes, fillval = $ff;
    ROM17:      start = $918000, size = $8000, fill = yes, fillval = $ff;
    ROM18:      start = $928000, size = $8000, fill = yes, fillval = $ff;
    ROM19:      start = $938000, size = $8000, fill = yes, fillval = $ff;
    ROM20:      start = $948000, size = $8000, fill = yes, fillval = $ff;
    ROM21:      start = $958000, size = $8000, fill = yes, fillval = $ff;
    ROM22:      start = $968000, size = $8000, fill = yes, fillval = $ff;
    ROM23:      start = $978000, size = $8000, fill = yes, fillval = $ff;
    ROM24:      start = $988000, size = $8000, fill = yes, fillval = $ff;
    ROM25:      start = $998000, size = $8000, fill = yes, fillval = $ff;
    ROM26:      start = $9a8000, size = $8000, fill = yes, fillval = $ff;
    ROM27:      start = $9b8000, size = $8000, fill = yes, fillval = $ff;
    ROM28:      start = $9c8000, size = $8000, fill = yes, fillval = $ff;
    ROM29:      start = $9d8000, size = $8000, fill = yes, fillval = $ff;
    ROM30:      start = $9e8000, size = $8000, fill = yes, fillval = $ff;
    ROM31:      start = $9f8000, size = $8000, fill = yes, fillval = $ff;
    ROM32:      start = $a08000, size = $8000, fill = yes, fillval = $ff;
    ROM33:      start = $a18000, size = $8000, fill = yes, fillval = $ff;
    ROM34:      start = $a28000, size = $8000, fill = yes, fillval = $ff;
    ROM35:      start = $a38000, size = $8000, fill = yes, fillval = $ff;
    ROM36:      start = $a48000, size = $8000, fill = yes, fillval = $ff;
    ROM37:      start = $a58000, size = $8000, fill = yes, fillval = $ff;
    ROM38:      start = $a68000, size = $8000, fill = yes, fillval = $ff;
    ROM39:      start = $a78000, size = $8000, fill = yes, fillval = $ff;
    ROM40:      start = $a88000, size = $8000, fill = yes, fillval = $ff;
    ROM41:      start = $a98000, size = $8000, fill = yes, fillval = $ff;
    ROM42:      start = $aa8000, size = $8000, fill = yes, fillval = $ff;
    ROM43:      start = $ab8000, size = $8000, fill = yes, fillval = $ff;
    ROM44:      start = $ac8000, size = $8000, fill = yes, fillval = $ff;
    ROM45:      start = $ad8000, size = $8000, fill = yes, fillval = $ff;
    ROM46:      start = $ae8000, size = $8000, fill = yes, fillval = $ff;
    ROM47:      start = $af8000, size = $8000, fill = yes, fillval = $ff;
    ROM48:      start = $b08000, size = $8000, fill = yes, fillval = $ff;
    ROM49:      start = $b18000, size = $8000, fill = yes, fillval = $ff;
    ROM50:      start = $b28000, size = $8000, fill = yes, fillval = $ff;
    ROM51:      start = $b38000, size = $8000, fill = yes, fillval = $ff;
    ROM52:      start = $b48000, size = $8000, fill = yes, fillval = $ff;
    ROM53:      start = $b58000, size = $8000, fill = yes, fillval = $ff;
    ROM54:      start = $b68000, size = $8000, fill = yes, fillval = $ff;
    ROM55:      start = $b78000, size = $8000, fill = yes, fillval = $ff;
    ROM56:      start = $b88000, size = $8000, fill = yes, fillval = $ff;
    ROM57:      start = $b98000, size = $8000, fill = yes, fillval = $ff;
    ROM58:      start = $b08000, size = $8000, fill = yes, fillval = $ff;
    ROM59:      start = $ba8000, size = $8000, fill = yes, fillval = $ff;
    ROM60:      start = $bb8000, size = $8000, fill = yes, fillval = $ff;
    ROM61:      start = $bc8000, size = $8000, fill = yes, fillval = $ff;
    ROM62:      start = $bd8000, size = $8000, fill = yes, fillval = $ff;
    ROM63:      start = $be8000, size = $8000, fill = yes, fillval = $ff;

    SMPZPAGE:   start = $0002, size = $00fe;
    SMPSTACK:   start = $0100, size = $0100;
    SMPRAM:     start = $0200, size = $fdc0;
}

SEGMENTS {
    ZPAD:       load = ZPAD,        type = bss, optional = yes;
    ZEROPAGE:   load = ZPAGE,       type = zp,  optional = yes;
    LORAM:      load = LORAM,       type = bss, optional = yes;
    HIRAM:      load = HIRAM,       type = bss, optional = yes;
    EXRAM:      load = EXRAM,       type = bss, optional = yes;
    SRAM:       load = SRAM,        type = bss, optional = yes;

    CODE:       load = ROM0,        type = ro;
    RODATA:     load = ROM0,        type = ro;
    LIBSFX:     load = ROM0,        type = ro, optional = yes;
    SMPLIBSFX:  load = ROM0,        type = rw, run = SMPZPAGE, optional = yes, define = yes;
    SMPCODE:    load = ROM0,        type = rw, run = SMPRAM, optional = yes, define = yes;
    HEADER:     load = ROM0,        type = ro, start = $80ffb0;
    VECTORS:    load = ROM0,        type = ro, start = $80ffe0;

    ROM1:       load = ROM1,        type = ro, optional = yes;
    ROM2:       load = ROM2,        type = ro, optional = yes;
    ROM3:       load = ROM3,        type = ro, optional = yes;
    ROM4:       load = ROM4,        type = ro, optional = yes;
    ROM5:       load = ROM5,        type = ro, optional = yes;
    ROM6:       load = ROM6,        type = ro, optional = yes;
    ROM7:       load = ROM7,        type = ro, optional = yes;
    ROM8:       load = ROM8,        type = ro, optional = yes;
    ROM9:       load = ROM9,        type = ro, optional = yes;
    ROM10:      load = ROM10,       type = ro, optional = yes;
    ROM11:      load = ROM11,       type = ro, optional = yes;
    ROM12:      load = ROM12,       type = ro, optional = yes;
    ROM13:      load = ROM13,       type = ro, optional = yes;
    ROM14:      load = ROM14,       type = ro, optional = yes;
    ROM15:      load = ROM15,       type = ro, optional = yes;
    ROM16:      load = ROM16,       type = ro, optional = yes;
    ROM17:      load = ROM17,       type = ro, optional = yes;
    ROM18:      load = ROM18,       type = ro, optional = yes;
    ROM19:      load = ROM19,       type = ro, optional = yes;
    ROM20:      load = ROM20,       type = ro, optional = yes;
    ROM21:      load = ROM21,       type = ro, optional = yes;
    ROM22:      load = ROM22,       type = ro, optional = yes;
    ROM23:      load = ROM23,       type = ro, optional = yes;
    ROM24:      load = ROM24,       type = ro, optional = yes;
    ROM25:      load = ROM25,       type = ro, optional = yes;
    ROM26:      load = ROM26,       type = ro, optional = yes;
    ROM27:      load = ROM27,       type = ro, optional = yes;
    ROM28:      load = ROM28,       type = ro, optional = yes;
    ROM29:      load = ROM29,       type = ro, optional = yes;
    ROM30:      load = ROM30,       type = ro, optional = yes;
    ROM31:      load = ROM31,       type = ro, optional = yes;
    ROM32:      load = ROM32,       type = ro, optional = yes;
    ROM33:      load = ROM33,       type = ro, optional = yes;
    ROM34:      load = ROM34,       type = ro, optional = yes;
    ROM35:      load = ROM35,       type = ro, optional = yes;
    ROM36:      load = ROM36,       type = ro, optional = yes;
    ROM37:      load = ROM37,       type = ro, optional = yes;
    ROM38:      load = ROM38,       type = ro, optional = yes;
    ROM39:      load = ROM39,       type = ro, optional = yes;
    ROM40:      load = ROM40,       type = ro, optional = yes;
    ROM41:      load = ROM41,       type = ro, optional = yes;
    ROM42:      load = ROM42,       type = ro, optional = yes;
    ROM43:      load = ROM43,       type = ro, optional = yes;
    ROM44:      load = ROM44,       type = ro, optional = yes;
    ROM45:      load = ROM45,       type = ro, optional = yes;
    ROM46:      load = ROM46,       type = ro, optional = yes;
    ROM47:      load = ROM47,       type = ro, optional = yes;
    ROM48:      load = ROM48,       type = ro, optional = yes;
    ROM49:      load = ROM49,       type = ro, optional = yes;
    ROM50:      load = ROM50,       type = ro, optional = yes;
    ROM51:      load = ROM51,       type = ro, optional = yes;
    ROM52:      load = ROM52,       type = ro, optional = yes;
    ROM53:      load = ROM53,       type = ro, optional = yes;
    ROM54:      load = ROM54,       type = ro, optional = yes;
    ROM55:      load = ROM55,       type = ro, optional = yes;
    ROM56:      load = ROM56,       type = ro, optional = yes;
    ROM57:      load = ROM57,       type = ro, optional = yes;
    ROM58:      load = ROM58,       type = ro, optional = yes;
    ROM59:      load = ROM59,       type = ro, optional = yes;
    ROM60:      load = ROM60,       type = ro, optional = yes;
    ROM61:      load = ROM61,       type = ro, optional = yes;
    ROM62:      load = ROM62,       type = ro, optional = yes;
    ROM63:      load = ROM63,       type = ro, optional = yes;

    SMPZPAGE:   load = SMPZPAGE,    type = zp, optional = yes;
    SMPRAM:     load = SMPRAM,      type = bss, optional = yes;
}
