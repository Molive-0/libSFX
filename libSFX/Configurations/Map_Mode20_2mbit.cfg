# libSFX Memory Map (Mode 20 "LoROM" mapping with 8*32kB banks)
# David Lindecrantz <optiroc@gmail.com>

SYMBOLS {
    __STACKSIZE__: type = weak, value = $100;
    __ZPADSIZE__:  type = weak, value = $20;
}

MEMORY {
    ZPAD:       start = $000000, size = __ZPADSIZE__, define = yes;
    ZPAGE:      start = __ZPADSIZE__, size = $100 - __ZPADSIZE__, define = yes;
    LORAM:      start = $000100, size = $1f00 - __STACKSIZE__, define = yes;
    STACK:      start = $002000 - __STACKSIZE__, size = __STACKSIZE__, define = yes;
    HIRAM:      start = $7e2000, size = $e000, define = yes;
    EXRAM:      start = $7f0000, size = $10000, define = yes;

    ROM0:       start = $808000, size = $8000, fill = yes, fillval = $ff;
    ROM1:       start = $818000, size = $8000, fill = yes, fillval = $ff;
    ROM2:       start = $828000, size = $8000, fill = yes, fillval = $ff;
    ROM3:       start = $838000, size = $8000, fill = yes, fillval = $ff;
    ROM4:       start = $838000, size = $8000, fill = yes, fillval = $ff;
    ROM5:       start = $838000, size = $8000, fill = yes, fillval = $ff;
    ROM6:       start = $838000, size = $8000, fill = yes, fillval = $ff;
    ROM7:       start = $838000, size = $8000, fill = yes, fillval = $ff;

    SPCZEROPAGE:start = $0010, size = $00e0;
    SPCRAM:     start = $0200, size = $fdc0;
}

SEGMENTS {
    ZPAD:       load = ZPAD,        type = bss, optional = yes;
    ZEROPAGE:   load = ZPAGE,       type = zp,  optional = yes;
    LORAM:      load = LORAM,       type = bss, optional = yes;
    HIRAM:      load = HIRAM,       type = bss, optional = yes;
    EXRAM:      load = EXRAM,       type = bss, optional = yes;

    CODE:       load = ROM0,        type = ro;
    RODATA:     load = ROM0,        type = ro;
    LIBSFX:     load = ROM0,        type = ro, optional = yes;
    HEADER:     load = ROM0,        type = ro, start = $80ffb0;
    VECTORS:    load = ROM0,        type = ro, start = $80ffe0;

    ROM1:       load = ROM1,        type = ro, optional = yes;
    ROM2:       load = ROM2,        type = ro, optional = yes;
    ROM3:       load = ROM3,        type = ro, optional = yes;
    ROM4:       load = ROM3,        type = ro, optional = yes;
    ROM5:       load = ROM3,        type = ro, optional = yes;
    ROM6:       load = ROM3,        type = ro, optional = yes;
    ROM7:       load = ROM3,        type = ro, optional = yes;
}
