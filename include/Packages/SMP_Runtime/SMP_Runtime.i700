; libSFX SMP Runtime Macros
; Kyle Swanson <k@ylo.ph>

.ifndef ::__MBSFX_SMP_Runtime__
::__MBSFX_SMP_Runtime__ = 1


.global SMP_AsyncEvent, SMP_Init, SMP_Directory
.globalzp SMP_seq_head, SMP_seq_tail, SMP_EventEnd, SMP_Runtime_KON_buf


.macro SMP_start_voice voice_no, pitch
       .if((voice_no < 0) || voice_no > 7)
       .error .sprintf("SMP_start_voice: Invalid voice_no: `%d`.", voice_no)
       .endif

        DSP_set (V0PITCHL + (voice_no * $10)), #<(pitch)
        DSP_set (V0PITCHH + (voice_no * $10)), #>(pitch)

        .if(    voice_no = 0)
        set1    SMP_Runtime_KON_buf.0
        .elseif(voice_no = 1)
        set1    SMP_Runtime_KON_buf.1
        .elseif(voice_no = 2)
        set1    SMP_Runtime_KON_buf.2
        .elseif(voice_no = 3)
        set1    SMP_Runtime_KON_buf.3
        .elseif(voice_no = 4)
        set1    SMP_Runtime_KON_buf.4
        .elseif(voice_no = 5)
        set1    SMP_Runtime_KON_buf.5
        .elseif(voice_no = 6)
        set1    SMP_Runtime_KON_buf.6
        .elseif(voice_no = 7)
        set1    SMP_Runtime_KON_buf.7
        .endif
.endmacro


.macro SMP_Set_Tempo BPM
        .if(BPM < 32)
        .error .sprintf("SMP_Set_Tempo: BPM (%d) too low, minimum value is 32.", BPM)
        .endif

        mov     T0DIV,#((8000+(BPM/2))/BPM)
        or      CONTROL,#CONTROL_ST0_START
.endmacro


.macro SMP_event event_addr, duration
        .word event_addr
        .byte duration
.endmacro


.macro SMP_set_sequence_head addr
        mov     SMP_seq_head,#<(addr)
        mov     SMP_seq_head+1,#>(addr)
        mov     SMP_event_ptr,#<(addr)
        mov     SMP_event_ptr+1,#>(addr)
        mov     SMP_event_delta,#<(addr+2)
        mov     SMP_event_delta+1,#>(addr+2)
.endmacro


.macro SMP_set_sequence_tail addr
        mov     SMP_seq_tail,#<(addr)
        mov     SMP_seq_tail+1,#>(addr)
.endmacro


.macro SMP_load_sequence addr_head, addr_tail
        SMP_set_sequence_head addr_head
        SMP_set_sequence_tail addr_tail
.endmacro


.macro SMP_Runtime_Import
.include "Packages/SMP_Runtime/SMP_Runtime.s700"
.endmacro

.endif;__MBSFX_SMP_Runtime__
