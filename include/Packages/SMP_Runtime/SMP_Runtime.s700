; libSFX SMP Runtime
; Kyle Swanson <k@ylo.ph>

;-------------------------------------------------------------------------------
.pushseg
.segment "MAIN"

/**
  SMP_Runtime starts here!
*/

SMP_Runtime_Main:
.assert * = $200, error, "SMP_Runtime: `Main' entrypoint not linked at $200"

        ;Initialize zeropage code
        mov     SMP_FireEvent,#$1f      ;jmp [!addr+x]
        mov     SMP_EventEnd,#$e5       ;mov a,!addr
        mov     SMP_event_ret,#$6f      ;ret

        ;Call initalizer
        call    !SMP_Runtime_Init

        ;Fire event
@event: mov     x,#$00
        call    !SMP_FireEvent

        ;Wait
        cmp     a,#$00
        beq     @smc
@wait:  mov     x,T0OUT
:       cmp     x,T0OUT
        beq     :-
        push    a
        call    !@cpuio
        pop     a
        dec     a
        bne     @wait

        ;Update `SMP_event_delta' and `SMP_event_ptr'
@smc:   incw    SMP_event_delta
        mov     SMP_event_ptr,SMP_event_delta
        mov     SMP_event_ptr+1,SMP_event_delta+1
        incw    SMP_event_delta
        incw    SMP_event_delta

        ;Reset sequence, loop
        movw    ya,SMP_event_ptr
        cmpw    ya,SMP_seq_tail
        bne     @event
        SMP_set_sequence_head !SMP_seq_head
        bra     @event

        ;Check for S-CPU events
@cpuio: mov     x,CPUIO0
        cmp     x,#$00
        beq     :++
        call    !SMP_AsyncEvent
        mov     CPUIO0,x
:       cmp     CPUIO0,#$00
        bne     :-
        mov     CPUIO0,#$00
:       ret

End_SMP_Runtime_Main:

.popseg

;-------------------------------------------------------------------------------
.pushseg
.segment "ZEROPAGE"

SMP_seq_head:       .res 2
SMP_seq_tail:       .res 2

SMP_FireEvent:      .res 1      ;jmp [!addr+x]
SMP_event_ptr:      .res 2      ; addr

SMP_EventEnd:       .res 1      ;mov a,!addr
SMP_event_delta:    .res 2      ; addr
SMP_event_ret:      .res 1      ;ret

.popseg
