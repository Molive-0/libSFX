; libSFX SMP Runtime
; Kyle Swanson <k@ylo.ph>

;-------------------------------------------------------------------------------
.pushseg
.segment "MAIN"

/**
  SMP_Runtime starts here!
*/

SMP_Runtime_Main:
.assert * = $200, error, "SMP_Runtime: Entrypoint not linked at $200"

        ;Initialize zeropage code
        mov     SMP_Runtime_FireEvent,#$1f      ;jmp [!addr+x]
        mov     SMP_Runtime_EventEnd,#$e5       ;mov a,!addr
        mov     SMP_Runtime_event_ret,#$6f      ;ret

        ;Call initalizer
        call    !SMP_Runtime_Init
        DSP_set DIR, #>SMP_Runtime_Directory

        ;Fire event
@event: DSP_get KOF, x
        mov     SMP_Runtime_KOF_buf,x
        mov     SMP_Runtime_KON_buf,#$00
        mov     x,#$00
        call    !SMP_Runtime_FireEvent
        DSP_set KOF, SMP_Runtime_KOF_buf
        DSP_set KON, SMP_Runtime_KON_buf

        ;Wait
        cmp     a,#$00
        beq     @smc
@wait:  mov     x,T0OUT
:       cmp     x,T0OUT
        beq     :-
        push    a
        call    !@cpuio
        call    !@kof
        call    !@port
        pop     a
        dec     a
        bne     @wait

        ;Update `SMP_Runtime_event_delta' and `SMP_Runtime_event_ptr'
@smc:   clrp
        incw    SMP_Runtime_event_delta
        mov     SMP_Runtime_event_ptr,SMP_Runtime_event_delta
        mov     SMP_Runtime_event_ptr+1,SMP_Runtime_event_delta+1
        incw    SMP_Runtime_event_delta
        incw    SMP_Runtime_event_delta

        ;Reset sequence, loop
        movw    ya,SMP_Runtime_event_ptr
        cmpw    ya,SMP_Runtime_seq_tail
        bne     @event
        SMP_Runtime_reset_sequence_head
        bra     @event

        ;Check for S-CPU events
@cpuio: mov     x,CPUIO0
        cmp     x,#$00
        beq     :++
        mov     CPUIO0,x
:       cmp     CPUIO0,#$00
        bne     :-
        mov     CPUIO0,#$00
        DSP_get KOF, y
        mov     SMP_Runtime_KOF_buf,y
        mov     SMP_Runtime_KON_buf,#$00
        call    !SMP_Runtime_AsyncEvent
        DSP_set KOF, SMP_Runtime_KOF_buf
        DSP_set KON, SMP_Runtime_KON_buf
:       ret

        ;Check for KOF events
@kof:   mov     y,#$00
        mov     a,#$00
        DSP_get KOF, x
        mov     SMP_Runtime_KOF_buf,x
        cmpw    ya, SMP_Runtime_KOF_ctr + (0 * 2)
        beq     :+
        decw    SMP_Runtime_KOF_ctr + (0 * 2)
        bne     :+
        set1    SMP_Runtime_KOF_buf.0
:       cmpw    ya, SMP_Runtime_KOF_ctr + (1 * 2)
        beq     :+
        decw    SMP_Runtime_KOF_ctr + (1 * 2)
        bne     :+
        set1    SMP_Runtime_KOF_buf.1
:       cmpw    ya, SMP_Runtime_KOF_ctr + (2 * 2)
        beq     :+
        decw    SMP_Runtime_KOF_ctr + (2 * 2)
        bne     :+
        set1    SMP_Runtime_KOF_buf.2
:       cmpw    ya, SMP_Runtime_KOF_ctr + (3 * 2)
        beq     :+
        decw    SMP_Runtime_KOF_ctr + (3 * 2)
        bne     :+
        set1    SMP_Runtime_KOF_buf.3
:       cmpw    ya, SMP_Runtime_KOF_ctr + (4 * 2)
        beq     :+
        decw    SMP_Runtime_KOF_ctr + (4 * 2)
        bne     :+
        set1    SMP_Runtime_KOF_buf.4
:       cmpw    ya, SMP_Runtime_KOF_ctr + (5 * 2)
        beq     :+
        decw    SMP_Runtime_KOF_ctr + (5 * 2)
        bne     :+
        set1    SMP_Runtime_KOF_buf.5
:       cmpw    ya, SMP_Runtime_KOF_ctr + (6 * 2)
        beq     :+
        decw    SMP_Runtime_KOF_ctr + (6 * 2)
        bne     :+
        set1    SMP_Runtime_KOF_buf.6
:       cmpw    ya, SMP_Runtime_KOF_ctr + (7 * 2)
        beq     :+
        decw    SMP_Runtime_KOF_ctr + (7 * 2)
        bne     :+
        set1    SMP_Runtime_KOF_buf.7
:       DSP_set KOF, SMP_Runtime_KOF_buf
        ret

        ;Check for portamento events
@port:  ;to-do
        ret

End_SMP_Runtime_Main:

.popseg

;-------------------------------------------------------------------------------
.pushseg
.segment "ZEROPAGE"

SMP_Runtime_seq_head:       .res 2
SMP_Runtime_seq_tail:       .res 2

SMP_Runtime_FireEvent:      .res 1      ;jmp [!addr+x]
SMP_Runtime_event_ptr:      .res 2      ; addr

SMP_Runtime_EventEnd:       .res 1      ;mov a,!addr
SMP_Runtime_event_delta:    .res 2      ; addr
SMP_Runtime_event_ret:      .res 1      ;ret

SMP_Runtime_KON_buf:        .res 1
SMP_Runtime_KOF_buf:        .res 1
SMP_Runtime_KOF_ctr:        .res 2 * 8

.popseg
